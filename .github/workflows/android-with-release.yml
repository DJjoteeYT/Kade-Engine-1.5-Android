name: Android Build CI With Release

on: [workflow_dispatch] 

jobs:
  build-armv7-and-arm64:
    name: Android
    runs-on: ubuntu-${{ matrix.version }}
    strategy:
      matrix:
        arch: [arm64, armv7]
        build: [release]
        version: [20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e
      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: zulu
          java-version: 12
      - name: Setup Android SDK
        uses: android-actions/setup-android@main
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.1.5
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install lime 7.9.0 --quiet
          haxelib git hxcpp https://github.com/mcagabe19/hxcpp-fastspeed.git
          haxelib install openfl 9.1.0 --quiet
          haxelib install actuate 1.8.9 --quiet
          haxelib --never git flixel https://github.com/mcagabe19/flixel-4.9.0.git
          haxelib install flixel-ui 2.3.3 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib install flixel-addons 2.10.0 --quiet
          haxelib git linc_luajit https://github.com/sirox228/linc_luajit.git
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools.git
          haxelib git extension-videoview https://github.com/MAJigsaw77/extension-videoview.git
      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Compile
        run: haxelib run lime build android -D no-compilation -D macro-times -D analyzer-optimize -D mobileC -${{ matrix.build }} -${{ matrix.arch }} && mv export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/*.apk export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/Kade1.5-${{ matrix.arch }}.apk
        env:
          cert_pass: 123456
          cert_alias_pass: 123456
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-${{ matrix.arch }}-${{ matrix.build }}
          path: 'export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/*.apk'
  build-armv6:
    name: Android
    runs-on: ubuntu-${{ matrix.version }}
    strategy:
      matrix:
        arch: [armv6]
        build: [release]
        version: [20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r11c
      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: zulu
          java-version: 12
      - name: Setup Android SDK
        uses: android-actions/setup-android@main
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.1.5
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install lime 7.9.0 --quiet
          haxelib git hxcpp https://github.com/mcagabe19/hxcpp-fastspeed.git
          haxelib install openfl 9.1.0 --quiet
          haxelib install actuate 1.8.9 --quiet
          haxelib --never git flixel https://github.com/mcagabe19/flixel-4.9.0.git
          haxelib install flixel-ui 2.3.3 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib install flixel-addons 2.10.0 --quiet
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools.git
          haxelib git extension-videoview https://github.com/MAJigsaw77/extension-videoview.git
      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Compile
        run: haxelib run lime build android -D no-compilation -D macro-times -D analyzer-optimize -D nolua -D mobileC -${{ matrix.build }} -${{ matrix.arch }} && mv export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/*.apk export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/Kade1.5-${{ matrix.arch }}.apk
        env:
          cert_pass: 123456
          cert_alias_pass: 123456
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-${{ matrix.arch }}-${{ matrix.build }}
          path: 'export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/*.apk'
  build-x86-and-x8664:
    name: Android
    runs-on: ubuntu-${{ matrix.version }}
    strategy:
      matrix:
        arch: [32, 64]
        build: [release]
        version: [20.04]
    steps:
      - name: Checkout
        uses: actions/checkout@main
      - name: Setup Android NDK
        uses: nttld/setup-ndk@main
        id: setup-ndk
        with:
          ndk-version: r21e
      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: zulu
          java-version: 12
      - name: Setup Android SDK
        uses: android-actions/setup-android@main
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.1.5
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib git lime https://github.com/mcagabe19/lime --quiet
          haxelib git hxcpp https://github.com/mcagabe19/hxcpp-fastspeed.git
          haxelib install openfl 9.1.0 --quiet
          haxelib install actuate 1.8.9 --quiet
          haxelib --never git flixel https://github.com/mcagabe19/flixel-4.9.0.git
          haxelib install flixel-ui 2.3.3 --quiet
          haxelib install hscript 2.4.0 --quiet
          haxelib install flixel-addons 2.10.0 --quiet
          haxelib git linc_luajit https://github.com/sirox228/linc_luajit.git
          haxelib git extension-androidtools https://github.com/MAJigsaw77/extension-androidtools.git
          haxelib git extension-videoview https://github.com/MAJigsaw77/extension-videoview.git
      - name: Setup Lime
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
      - name: Compile
        run: haxelib run lime build android -D no-compilation -D macro-times -D analyzer-optimize -D mobileC -${{ matrix.build }} -${{ matrix.arch }} && mv export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/*.apk export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/Kade1.5-${{ matrix.arch }}.apk
        env:
          cert_pass: 123456
          cert_alias_pass: 123456
      - name: Publish Artifact
        uses: actions/upload-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-${{ matrix.arch }}-${{ matrix.build }}
          path: 'export/${{ matrix.build }}/android/bin/app/build/outputs/apk/${{ matrix.build }}/*.apk'
  release-shits:
    needs: [build-armv7-and-arm64, build-armv6, build-x86-and-x8664]
    name: Release Builds
    runs-on: ubuntu-${{ matrix.version }}
    strategy:
      matrix:
        version: [20.04]
    steps:
      - name: Download Armv6 Build
        uses: actions/download-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-armv6-release
      - name: Download Armv7 Build
        uses: actions/download-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-armv7-release
      - name: Download Arm64 Build
        uses: actions/download-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-arm64-release
      - name: Download x86 Build
        uses: actions/download-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-32-release
      - name: Download x86_64 Build
        uses: actions/download-artifact@main
        with:
          name: build-ubuntu${{ matrix.version }}-64-release
      - name: Release
        uses: softprops/action-gh-release@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: '*.apk'
